# Generated by Django 2.0.4 on 2018-04-20 10:52

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('aid', models.CharField(help_text="Use 'A' as prefix in 10 character Author's ID", max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(10)], verbose_name="Author's ID")),
                ('fName', models.CharField(max_length=50, null=True, verbose_name='First Name')),
                ('lName', models.CharField(blank=True, max_length=50, null=True, verbose_name='Last Name')),
                ('about', models.TextField(blank=True, help_text='Add description about the Author', null=True, verbose_name='About the Author')),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
                'db_table': 'authors',
                'ordering': ['fName', 'lName'],
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('isbn', models.CharField(help_text='ISBN (or ISBN 10): 10 digit value', max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(10)], verbose_name='ISBN')),
                ('bookTitle', models.CharField(max_length=255, null=True, verbose_name='Title of Book')),
                ('description', models.TextField(blank=True, help_text='Enter the book description', null=True, verbose_name='Description')),
                ('pageCount', models.PositiveIntegerField(default=0, verbose_name='Number of Pages')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, help_text='Rating should be in between 0.0 and 5.0', max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='Rating')),
                ('language', models.CharField(blank=True, max_length=20, null=True, verbose_name='Language')),
                ('coverImage', models.URLField(blank=True, help_text='Enter image URL', max_length=255, null=True, verbose_name='Cover Image URL')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(99999.99)], verbose_name='Price')),
                ('publishedDate', models.DateField(blank=True, null=True, verbose_name='Publishing Date')),
                ('booksCount', models.PositiveIntegerField(default=0, verbose_name='Number of Books')),
                ('bookFormat', models.CharField(blank=True, help_text='eg. Paperback, Hardcover', max_length=20, null=True, verbose_name='Book Format')),
                ('authors', models.ManyToManyField(db_table='books_authors', related_name='books', to='BookBarnApp.Authors', verbose_name='Authors')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
                'db_table': 'books',
                'ordering': ['bookTitle'],
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('gid', models.CharField(help_text="Use 'G' as prefix in 10 character Genre's ID", max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(10)], verbose_name="Genre's ID")),
                ('gName', models.CharField(max_length=255, null=True, verbose_name='Genre')),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
                'db_table': 'genres',
                'ordering': ['gName'],
            },
        ),
        migrations.CreateModel(
            name='Publishers',
            fields=[
                ('pid', models.CharField(help_text="Use 'P' as prefix in 10 character Publisher's ID", max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(10)], verbose_name="Publisher's ID")),
                ('pName', models.CharField(max_length=255, null=True, verbose_name='Publisher')),
            ],
            options={
                'verbose_name': 'Publisher',
                'verbose_name_plural': 'Publishers',
                'db_table': 'publishers',
                'ordering': ['pName'],
            },
        ),
        migrations.CreateModel(
            name='UserProfiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phoneNumber', models.CharField(max_length=10, null=True, validators=[django.core.validators.MinLengthValidator(10, message=' '), django.core.validators.RegexValidator('\\d+', message='Enter a valid 10 digit Phone No.')], verbose_name='Phone No.')),
                ('address1', models.CharField(max_length=255, null=True, verbose_name='Address Line 1')),
                ('address2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
                ('city', models.CharField(max_length=255, null=True, verbose_name='City')),
                ('state', models.CharField(max_length=255, null=True, verbose_name='State')),
                ('pinCode', models.CharField(max_length=6, null=True, validators=[django.core.validators.MinLengthValidator(6, message=' '), django.core.validators.RegexValidator('\\d+', message='Enter a valid 6 digit PIN Code')], verbose_name='PIN Code')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserProfile',
                'verbose_name_plural': 'UserProfiles',
                'db_table': 'userprofiles',
            },
        ),
        migrations.AddField(
            model_name='books',
            name='genres',
            field=models.ManyToManyField(db_table='books_genres', related_name='books', to='BookBarnApp.Genres', verbose_name='Genres'),
        ),
        migrations.AddField(
            model_name='books',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='books', to='BookBarnApp.Publishers', verbose_name='Publisher'),
        ),
    ]
